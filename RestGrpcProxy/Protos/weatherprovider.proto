syntax = "proto3";

import "flight/flightInfo.proto";
import "ui/uiOpmet.proto";
import "ui/uiVulcanicAshData.proto";
import "route/route.proto";
import "misc/primitives.proto";
import "nav/point.proto";
import "nav/distance.proto";
import "met/opmet.proto";
import "met/flightWeatherElement.proto";
import "met/pirep.proto";
import "met/airportWeatherData.proto";
import "met/vulcanicAshStatementData.proto";
import "met/tropicalStormTracks.proto";
import "misc/dataSource.proto";
import "misc/dataSourceId.proto";
import "opSpec/planningMinima/considerWeatherTrend.proto";
import "met/forecastOnDemand.proto";
import "met/sigWXPrognosisForecastConvection.proto";
import "met/sigWXPrognosisForecastJetStreamPointData.proto";
import "met/sigWXPrognosisForecastTropopause.proto";
import "met/sigWXPrognosisForecastTurbulence.proto";
import "met/sigWXPrognosisForecastTurbulencePointData.proto";
import "met/sigWXPrognosisForecastRadiation.proto";
import "met/sigWXPrognosisForecastJetStream.proto";
import "met/sigWXPrognosisForecastStorm.proto";
import "met/sigWXPrognosisForecastVolcano.proto";
import "ui/uiSigWXPrognosisForecast.proto";
import "met/icingForecast.proto";
import "met/upperAirWindTemperatures.proto";
import "met/surface.proto";
import "nav/altitude.proto";
import "met/airDataOptions.proto";
import "ui/uiAltitude.proto";
import "ui/uiWind.proto";
import "met/crossedWeather.proto";
import "misc/dataSourceFilter.proto";
import "nav/airspace/airspace.proto";
import "misc/userMessages.proto";

package com.fss.grpc.airline.weatherProvider;

option java_multiple_files = true;
option java_package = "com.fss.grpc.airline.weatherProvider";

service WeatherProvider {
  rpc GetAirportWeather(GetAirportWeatherInput) returns (GetAirportWeatherOutput);
  rpc GetWeatherForRoute(GetWeatherForRouteInput) returns (GetWeatherForRouteOutput);
  rpc GetWeatherForFir(GetWeatherForFirInput) returns (GetWeatherForFirOutput);
  rpc GetWeather(GetWeatherInput) returns (GetWeatherOutput);

  rpc GetWeatherVerticalProfile(GetWeatherVerticalProfileInput) returns (GetWeatherVerticalProfileOutput);
  rpc GetVerticalProfileConvection(GetWeatherVerticalProfileInput) returns (GetVerticalProfileConvectionOutput);
  rpc GetVerticalProfileJetStream(GetWeatherVerticalProfileInput) returns (GetVerticalProfileJetStreamOutput);
  rpc GetVerticalProfileJetStreamPointData(GetWeatherVerticalProfileInput) returns (GetVerticalProfileJetStreamPointDataOutput);
  rpc GetVerticalProfileRadiation(GetWeatherVerticalProfileInput) returns (GetVerticalProfileRadiationOutput);
  rpc GetVerticalProfileStorm(GetWeatherVerticalProfileInput) returns (GetVerticalProfileStormOutput);
  rpc GetVerticalProfileSurface(GetWeatherVerticalProfileInput) returns (GetVerticalProfileSurfaceOutput);
  rpc GetVerticalProfileTropopause(GetWeatherVerticalProfileInput) returns (GetVerticalProfileTropopauseOutput);
  rpc GetVerticalProfileTurbulence(GetWeatherVerticalProfileInput) returns (GetVerticalProfileTurbulenceOutput);
  rpc GetVerticalProfileTurbulencePointData(GetWeatherVerticalProfileInput) returns (GetVerticalProfileTurbulencePointDataOutput);
  rpc GetVerticalProfileUpperAirWindTemperatures(GetWeatherVerticalProfileInput) returns (GetVerticalProfileUpperAirWindTemperaturesOutput);
  rpc GetVerticalProfileVolcano(GetWeatherVerticalProfileInput) returns (GetVerticalProfileVolcanoOutput);
  rpc GetVerticalProfileVulcanicAsh(GetWeatherVerticalProfileInput) returns (GetVerticalProfileVulcanicAshOutput);
  rpc GetVerticalProfileTropicalStormTracks(GetWeatherVerticalProfileInput) returns (GetVerticalProfileTropicalStormTracksOutput);

  rpc GetCrossedWeather(GetCrossedWeatherInput) returns (GetCrossedWeatherOutput);

  rpc GetSigWxAreas(GetSigWxAreasInput) returns (GetSigWxAreasOutput);
  rpc GetParsedAirportWeather(GetParsedAirportWeatherInput) returns (GetParsedAirportWeatherOutput);
  rpc GetVulcanicAshData(GetVulcanicAshDataInput) returns (GetVulcanicAshDataOutput);

  rpc GetDataSourceById(GetDataSourceByIdInput) returns (GetDataSourceByIdOutput);
  rpc SaveDataSource(SaveDataSourceInput) returns (SaveDataSourceOutput);
  rpc GetDataSources(GetDataSourcesInput) returns (GetDataSourcesOutput);
  rpc SaveOpmetData(SaveOpmetDataInput) returns (SaveOpmetDataOutput);
  rpc SaveVolcanicAshData(SaveVolcanicAshDataInput) returns (SaveVolcanicAshDataOutput);
  rpc SaveTropicalStormTracksData(SaveTropicalStormTracksDataInput) returns (SaveTropicalStormTracksDataOutput);
  rpc SavePirepData(SavePirepDataInput) returns (SavePirepDataOutput);

  rpc GetPirep(GetPirepInput) returns (GetPirepOutput);
  rpc GetPirepForRoute(GetPirepForRouteInput) returns (GetPirepForRouteOutput);
  rpc GetPirepForFir(GetPirepForFirInput) returns (GetPirepForFirOutput);

  rpc SaveOpmet(SaveOpmetInput) returns (SaveOpmetOutput);
  rpc SaveVolcanicAsh(SaveVolcanicAshInput) returns (SaveVolcanicAshOutput);
  rpc SaveTropicalStormTracks(SaveTropicalStormTracksInput) returns (SaveTropicalStormTracksOutput);
  rpc SaveIcingForecast(SaveIcingForecastInput) returns (SaveIcingForecastOutput);
  rpc SaveUpperAirWindTemperatures(SaveUpperAirWindTemperaturesInput) returns (SaveUpperAirWindTemperaturesOutput);

  rpc AirportForecastOnDemand (AirportForecastOnDemandInput) returns (AirportForecastOnDemandOutput);

  rpc CancelOpmetData(CancelOpmetDataInput) returns (CancelOpmetDataOutput);

  rpc GetHistoricalAirportWeather(GetHistoricalAirportWeatherInput) returns (GetHistoricalAirportWeatherOutput);

  rpc GetFlightWeather(GetFlightWeatherInput) returns (GetFlightWeatherOutput);
  rpc GetFlightWeatherForecastOnDemand(GetFlightWeatherForecastOnDemandInput) returns (GetFlightWeatherForecastOnDemandOutput);

  rpc SaveSigWXPrognosisForecastConvection(SaveSigWXPrognosisForecastConvectionInput) returns (SaveSigWXPrognosisForecastConvectionOutput);
  rpc SaveSigWXPrognosisForecastJetStreamPointData(SaveSigWXPrognosisForecastJetStreamPointDataInput) returns (SaveSigWXPrognosisForecastJetStreamPointDataOutput);
  rpc SaveSigWXPrognosisForecastTropopause(SaveSigWXPrognosisForecastTropopauseInput) returns (SaveSigWXPrognosisForecastTropopauseOutput);
  rpc SaveSigWXPrognosisForecastTurbulence(SaveSigWXPrognosisForecastTurbulenceInput) returns (SaveSigWXPrognosisForecastTurbulenceOutput);
  rpc SaveSigWXPrognosisForecastTurbulencePointData(SaveSigWXPrognosisForecastTurbulencePointDataInput) returns (SaveSigWXPrognosisForecastTurbulencePointDataOutput);
  rpc SaveSigWXPrognosisForecastJetStream(SaveSigWXPrognosisForecastJetStreamInput) returns (SaveSigWXPrognosisForecastJetStreamOutput);
  rpc SaveSigWXPrognosisForecastStorm(SaveSigWXPrognosisForecastStormInput) returns (SaveSigWXPrognosisForecastStormOutput);
  rpc SaveSigWXPrognosisForecastVolcano(SaveSigWXPrognosisForecastVolcanoInput) returns (SaveSigWXPrognosisForecastVolcanoOutput);
  rpc SaveSigWXPrognosisForecastRadiation(SaveSigWXPrognosisForecastRadiationInput) returns (SaveSigWXPrognosisForecastRadiationOutput);

  rpc GetSigWXPrognosisForecastConvection(GetSigWXPrognosisForecastConvectionInput) returns (GetSigWXPrognosisForecastConvectionOutput);
  rpc GetSigWXPrognosisForecastJetStreamPointData(GetSigWXPrognosisForecastJetStreamPointDataInput) returns (GetSigWXPrognosisForecastJetStreamPointDataOutput);
  rpc GetSigWXPrognosisForecastTropopause(GetSigWXPrognosisForecastTropopauseInput) returns (GetSigWXPrognosisForecastTropopauseOutput);
  rpc GetSigWXPrognosisForecastTurbulence(GetSigWXPrognosisForecastTurbulenceInput) returns (GetSigWXPrognosisForecastTurbulenceOutput);
  rpc GetSigWXPrognosisForecastTurbulencePointData(GetSigWXPrognosisForecastTurbulencePointDataInput) returns (GetSigWXPrognosisForecastTurbulencePointDataOutput);
  rpc GetSigWXPrognosisForecastJetStream(GetSigWXPrognosisForecastJetStreamInput) returns (GetSigWXPrognosisForecastJetStreamOutput);
  rpc GetSigWXPrognosisForecastStorm(GetSigWXPrognosisForecastStormInput) returns (GetSigWXPrognosisForecastStormOutput);
  rpc GetSigWXPrognosisForecastVolcano(GetSigWXPrognosisForecastVolcanoInput) returns (GetSigWXPrognosisForecastVolcanoOutput);
  rpc GetSigWXPrognosisForecastRadiation(GetSigWXPrognosisForecastRadiationInput) returns (GetSigWXPrognosisForecastRadiationOutput);

  rpc SaveSurface(SaveSurfaceInput) returns (SaveSurfaceOutput);
  rpc GetSurface(GetSurfaceInput) returns (GetSurfaceOutput);

  rpc GetUpperAirWindTemperatures(GetUpperAirWindTemperaturesInput) returns (GetUpperAirWindTemperaturesOutput);
  rpc GetPointWeatherUi(GetPointWeatherUiInput) returns (GetPointWeatherUiOutput);

  rpc GetAirspaceByUniqueKey (GetAirspaceByUniqueKeyInput) returns (GetAirspaceByUniqueKeyOutput);

}

message GetAirspaceByUniqueKeyInput {
  globals.misc.DataSourceFilter data_source_filter = 1;
  globals.primitives.StringValue unique_key = 2;
}

message GetAirspaceByUniqueKeyOutput {
  globals.nav.airspace.Airspace airspace = 1;
  globals.misc.UserMessages user_messages = 2;
}

message GetFlightWeatherInput{
  globals.flight.FlightInfo flight_info = 1;
  globals.primitives.BooleanValue extended = 2; //default == true
}

message GetFlightWeatherOutput {
  repeated globals.met.FlightWeatherElement elements = 1;
}

message GetFlightWeatherForecastOnDemandInput {
  globals.flight.FlightInfo flight_info = 1;
}

message GetFlightWeatherForecastOnDemandOutput {
  repeated globals.met.FlightWeatherForecastOnDemandElement elements = 1;
}

message SaveOpmetInput {
  globals.met.Opmet opmet = 1;
}
message SaveOpmetOutput {
  globals.primitives.BooleanValue success = 1;
}

message SaveVolcanicAshInput {
  globals.met.VulcanicAshStatementData vulcanic_ash_statement_data = 1;
}
message SaveVolcanicAshOutput {
  globals.primitives.BooleanValue success = 1;
}

message SaveVolcanicAshDataInput {
  globals.misc.DataSourceId data_source_id = 1;
  repeated globals.met.VulcanicAshStatementData vulcanic_ash_statement_datas = 2;
}
message SaveVolcanicAshDataOutput {
}

message SaveTropicalStormTracksInput {
  globals.met.TropicalStormTracks tropical_storm_tracks_data = 1;
}
message SaveTropicalStormTracksOutput {
  globals.primitives.BooleanValue success = 1;
}

message SaveTropicalStormTracksDataInput {
  globals.misc.DataSourceId data_source_id = 1;
  repeated globals.met.TropicalStormTracks tropical_storm_tracks_datas = 2;
}
message SaveTropicalStormTracksDataOutput {
}

message GetAirportWeatherInput {
  globals.primitives.StringValue icao_ident = 1;
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 2;
  globals.primitives.BooleanValue is_expanded = 3;
}

message GetAirportWeatherOutput {
  repeated com.fss.grpc.globals.ui.UiOpmet opmet = 1;
}

message GetWeatherForRouteInput {
  globals.route.Route route = 1;
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 2;
}

message GetWeatherForRouteOutput {
  repeated com.fss.grpc.globals.ui.UiOpmet opmet = 1;
}

message GetWeatherForFirInput {
  globals.primitives.StringValue icao_ident = 1;
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 2;
}

message GetWeatherForFirOutput {
  repeated com.fss.grpc.globals.ui.UiOpmet opmet = 1;
}

message GetWeatherInput {
  globals.primitives.Int32Value skip = 1;
  globals.primitives.Int32Value take = 2;
  Provider provider = 3;
  WeatherAirspaceType airspace_type = 4;
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 5;
  globals.primitives.StringValue iso8601_time_start = 6;
  globals.primitives.StringValue iso8601_time_end = 7;
}

message GetWeatherOutput {
  repeated com.fss.grpc.globals.ui.UiOpmet opmet = 1;
}

message GetWeatherVerticalProfileInput {
  globals.flight.FlightInfo flight_info = 1; //either flight_info or route has to be defined
  globals.route.Route route = 2;
  Provider provider = 3; //optional, default unset
  WeatherAirspaceType airspace_type = 4; //optional, default BOTH (SIGMET+AIRMET/FPG)
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 5; //optional, default WSI
  globals.nav.Distance buffer = 6; //optional, default 50 nautical miles
}

message GetWeatherVerticalProfileOutput {
  repeated com.fss.grpc.globals.met.VerticalProfileOpmet opmets = 1;
}

message  GetCrossedWeatherInput {
  globals.flight.FlightInfo flight_info = 1; //either flight_info or route has to be defined
  globals.route.Route route = 2;
  Provider provider = 3; //optional, default unset
  WeatherAirspaceType airspace_type = 4; //optional, default BOTH (SIGMET+AIRMET/FPG)
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 5; //optional, default WSI
  globals.nav.Distance buffer = 6; //optional, default 50 nautical miles
  globals.nav.Altitude lower_buffer = 7; //optional, default 1000 ft
  globals.nav.Altitude upper_buffer = 8; //optional, default 1000 ft
  globals.primitives.BooleanValue apply_vertical_filter = 9; //optional, default true
  globals.primitives.BooleanValue report_opmet_airspace = 10; //optional, default true
}

message GetCrossedWeatherOutput {
  repeated globals.met.CrossedWeather crossed_weather = 1;
}

message GetVerticalProfileConvectionOutput {
  repeated com.fss.grpc.globals.met.VerticalProfileSigWXPrognosisForecastConvection verticalprofiles = 1;
}

message GetVerticalProfileJetStreamOutput {
  repeated com.fss.grpc.globals.met.VerticalProfileSigWXPrognosisForecastJetStream verticalprofiles = 1;
}

message GetVerticalProfileJetStreamPointDataOutput {
  repeated com.fss.grpc.globals.met.VerticalProfileSigWXPrognosisForecastJetStreamPointData verticalprofiles = 1;
}

message GetVerticalProfileRadiationOutput{
  repeated com.fss.grpc.globals.met.VerticalProfileSigWXPrognosisForecastRadiation verticalprofiles = 1;
}

message GetVerticalProfileStormOutput {
  repeated com.fss.grpc.globals.met.VerticalProfileSigWXPrognosisForecastStorm verticalprofiles = 1;
}

message GetVerticalProfileTropopauseOutput {
  repeated com.fss.grpc.globals.met.VerticalProfileSigWXPrognosisForecastTropopause verticalprofiles = 1;
}

message GetVerticalProfileTurbulenceOutput {
  repeated com.fss.grpc.globals.met.VerticalProfileSigWXPrognosisForecastTurbulence verticalprofiles = 1;
}

message GetVerticalProfileTurbulencePointDataOutput {
  repeated com.fss.grpc.globals.met.VerticalProfileSigWXPrognosisForecastTurbulencePointData verticalprofiles = 1;
}

message GetVerticalProfileVolcanoOutput {
  repeated com.fss.grpc.globals.met.VerticalProfileSigWXPrognosisForecastVolcano verticalprofiles = 1;
}

message GetVerticalProfileSurfaceOutput {
  repeated com.fss.grpc.globals.met.VerticalProfileSurface verticalprofiles = 1;
}

message GetVerticalProfileTropicalStormTracksOutput {
  repeated com.fss.grpc.globals.met.VerticalProfileTropicalStormTracks verticalprofiles = 1;
}

message GetVerticalProfileUpperAirWindTemperaturesOutput {
  repeated com.fss.grpc.globals.met.VerticalProfileUpperAirWindTemperatures verticalprofiles = 1;
}

message GetVerticalProfileVulcanicAshOutput {
  repeated com.fss.grpc.globals.met.VerticalProfileVulcanicAshStatementData verticalprofiles = 1;
}

message GetSigWxAreasInput {

}
message GetSigWxAreasOutput {
  repeated SigWxAreaInfo area_info = 1;
}

message SigWxAreaInfo {
  globals.primitives.StringValue name = 1;
  globals.primitives.StringValue date = 2;
  globals.primitives.StringValue deployment_date = 3;
}

message GetParsedAirportWeatherInput {
  globals.primitives.StringValue airport_icao = 1;
  globals.primitives.StringValue runway_ident = 2;
  globals.primitives.BooleanValue runway_hials = 3;
  globals.nav.Point runway_point = 4;
  globals.opSpec.planningMinima.ConsiderWeatherTrend consideration = 5;
  globals.primitives.StringValue earliest_time_at = 6;
  globals.primitives.StringValue latest_time_at = 7;
}

message GetParsedAirportWeatherOutput {
  globals.met.AirportWeatherData weather_data = 1;
}

message GetHistoricalAirportWeatherInput {
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 1;
  globals.primitives.StringValue airport_icao = 2;
  globals.primitives.StringValue date_from = 3;
  globals.primitives.StringValue date_until = 4;
  globals.primitives.BooleanValue include_canceled = 5;
  com.fss.grpc.globals.met.Opmet.OpmetType opmet_type = 6;
}

message GetHistoricalAirportWeatherOutput {
  repeated com.fss.grpc.globals.ui.UiOpmet opmet = 1;
}

message GetVulcanicAshDataInput {
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 1;
  globals.primitives.StringValue obsvadtg_datetime = 2;
}

message GetVulcanicAshDataOutput {
  repeated com.fss.grpc.globals.ui.UiVulcanicAshData vulcanic_ash_ui_data = 1;
}

enum Provider{
  UNSET_PROVIDER = 0;
  SADIS = 1;
  AWC = 2;
  WIFS = 3;
  ALL = 4;
}

enum WeatherAirspaceType {
  UNSET_WEATHER_AIRSPACE_TYPE = 0;
  SIGMET = 1;
  AIRMET = 2;
  BOTH = 3; //SIGMET+AIRMET/FPG
  FPG = 4;
}

enum SigWXPrognosisForecastType {
  UNSET_SIGWX_PROGNOSIS_FORECAST_TYPE = 0;
  CONVECTION = 1;
  JET_STREAM = 2;
  JET_STREAM_POINT_DATA = 3;
  RADIATION = 4;
  STORM = 5;
  TROPOPAUSE = 6;
  TURBULENCE = 7;
  TURBULENCE_POINT_DATA = 8;
  VOLCANO = 9;
}

message GetDataSourceByIdInput{
  globals.misc.DataSourceId id = 1;
}

message GetDataSourceByIdOutput{
  globals.misc.DataSource data_source = 1;
}

message SaveDataSourceInput {
  globals.misc.DataSource data_source = 1;
}

message SaveDataSourceOutput {
  globals.primitives.BooleanValue success = 1;
}

message GetDataSourcesInput {
}

message GetDataSourcesOutput {
  repeated  com.fss.grpc.globals.misc.DataSource data_source = 1;
}

message SaveOpmetDataInput {
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 1;
  repeated com.fss.grpc.globals.met.Opmet opmets = 2;
}

message SaveOpmetDataOutput {
}

message SavePirepDataInput {
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 1;
  repeated com.fss.grpc.globals.met.Pirep pireps = 2;
}

message SavePirepDataOutput {
}

message GetPirepInput {
  globals.primitives.Int32Value skip = 1;
  globals.primitives.Int32Value take = 2;
  globals.primitives.StringValue iso8601_time_start = 3;
  globals.primitives.StringValue iso8601_time_end = 4;
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 5;
}

message GetPirepOutput {
  repeated com.fss.grpc.globals.met.Pirep pireps = 1;
}

message  GetPirepForRouteInput {
  globals.route.Route route = 1;
  globals.primitives.StringValue iso8601_time_start = 2;
  globals.primitives.StringValue iso8601_time_end = 3;
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 4;
  globals.nav.Distance buffer = 5;
}

message  GetPirepForRouteOutput {
  repeated com.fss.grpc.globals.met.Pirep pireps = 1;
}

message  GetPirepForFirInput {
  globals.primitives.StringValue fir = 1;
  globals.primitives.StringValue iso8601_time_start = 2;
  globals.primitives.StringValue iso8601_time_end = 3;
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 4;
}

message  GetPirepForFirOutput {
  repeated com.fss.grpc.globals.met.Pirep pireps = 1;
}

message AirportForecastOnDemandInput {
  globals.primitives.StringValue icao = 1;
  globals.primitives.StringValue iata = 2;
}

message AirportForecastOnDemandOutput {
  globals.primitives.StringValue iso8601_time_duration_start = 1;
  globals.primitives.StringValue iso8601_time_duration_end = 2;

  repeated com.fss.grpc.globals.met.ForecastOnDemand forecast = 3;
}


message CancelOpmetDataInput {
  com.fss.grpc.globals.met.Opmet.OpmetType opmet_type = 1;
  globals.primitives.StringValue sequence_number = 2;
  globals.primitives.StringValue cancel_timestamp = 3;
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 4;
}

message  CancelOpmetDataOutput {
}



message SaveSigWXPrognosisForecastConvectionInput {
  globals.misc.DataSourceId data_source_id = 1;
  repeated globals.met.SigWXPrognosisForecastConvection forecasts = 2;
}

message SaveSigWXPrognosisForecastConvectionOutput {
}

message SaveSigWXPrognosisForecastJetStreamPointDataInput {
  globals.misc.DataSourceId data_source_id = 1;
  repeated globals.met.SigWXPrognosisForecastJetStreamPointData forecasts = 2;
}

message SaveSigWXPrognosisForecastJetStreamPointDataOutput {
}

message SaveSigWXPrognosisForecastTropopauseInput {
  globals.misc.DataSourceId data_source_id = 1;
  repeated globals.met.SigWXPrognosisForecastTropopause forecasts = 2;
}

message SaveSigWXPrognosisForecastTropopauseOutput {
}

message SaveSigWXPrognosisForecastTurbulenceInput {
  globals.misc.DataSourceId data_source_id = 1;
  repeated globals.met.SigWXPrognosisForecastTurbulence forecasts = 2;
}

message SaveSigWXPrognosisForecastTurbulenceOutput {
}

message SaveSigWXPrognosisForecastTurbulencePointDataInput {
  globals.misc.DataSourceId data_source_id = 1;
  repeated globals.met.SigWXPrognosisForecastTurbulencePointData forecasts = 2;
}

message SaveSigWXPrognosisForecastTurbulencePointDataOutput {
}

message SaveSigWXPrognosisForecastJetStreamInput {
  globals.misc.DataSourceId data_source_id = 1;
  repeated globals.met.SigWXPrognosisForecastJetStream forecasts = 2;
}

message SaveSigWXPrognosisForecastJetStreamOutput {
}

message SaveSigWXPrognosisForecastStormInput {
  globals.misc.DataSourceId data_source_id = 1;
  repeated globals.met.SigWXPrognosisForecastStorm forecasts = 2;
}

message SaveSigWXPrognosisForecastStormOutput {
}

message SaveSigWXPrognosisForecastVolcanoInput {
  globals.misc.DataSourceId data_source_id = 1;
  repeated globals.met.SigWXPrognosisForecastVolcano forecasts = 2;
}

message SaveSigWXPrognosisForecastVolcanoOutput {
}

message SaveSigWXPrognosisForecastRadiationInput {
  globals.misc.DataSourceId data_source_id = 1;
  repeated globals.met.SigWXPrognosisForecastRadiation forecasts = 2;
}

message SaveSigWXPrognosisForecastRadiationOutput {
}

message SaveIcingForecastInput {
  globals.misc.DataSourceId data_source_id = 1;
  repeated globals.met.IcingForecast forecasts = 2;
}

message SaveIcingForecastOutput {
}


message SaveUpperAirWindTemperaturesInput {
  globals.misc.DataSourceId data_source_id = 1;
  repeated globals.met.UpperAirWindTemperatures upper_air_wind_temperatures = 2;
}

message SaveUpperAirWindTemperaturesOutput {
}

message GetSigWXPrognosisForecastConvectionInput{
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 1;
  globals.primitives.StringValue forecast_from_date = 2;
  globals.primitives.StringValue forecast_until_date = 3;
}
message GetSigWXPrognosisForecastConvectionOutput {
  repeated globals.ui.UiSigWXPrognosisForecastConvection forecasts = 1;
}

message GetSigWXPrognosisForecastJetStreamPointDataInput{
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 1;
  globals.primitives.StringValue forecast_from_date = 2;
  globals.primitives.StringValue forecast_until_date = 3;
}
message GetSigWXPrognosisForecastJetStreamPointDataOutput {
  repeated globals.ui.UiSigWXPrognosisForecastJetStreamPointData forecasts = 1;
}

message GetSigWXPrognosisForecastTropopauseInput{
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 1;
  globals.primitives.StringValue forecast_from_date = 2;
  globals.primitives.StringValue forecast_until_date = 3;
}
message GetSigWXPrognosisForecastTropopauseOutput {
  repeated globals.ui.UiSigWXPrognosisForecastTropopause forecasts = 1;
}

message GetSigWXPrognosisForecastTurbulenceInput{
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 1;
  globals.primitives.StringValue forecast_from_date = 2;
  globals.primitives.StringValue forecast_until_date = 3;
}
message GetSigWXPrognosisForecastTurbulenceOutput {
  repeated globals.ui.UiSigWXPrognosisForecastTurbulence forecasts = 1;
}

message GetSigWXPrognosisForecastTurbulencePointDataInput{
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 1;
  globals.primitives.StringValue forecast_from_date = 2;
  globals.primitives.StringValue forecast_until_date = 3;
}
message GetSigWXPrognosisForecastTurbulencePointDataOutput {
  repeated globals.ui.UiSigWXPrognosisForecastTurbulencePointData forecasts = 1;
}

message GetSigWXPrognosisForecastJetStreamInput{
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 1;
  globals.primitives.StringValue forecast_from_date = 2;
  globals.primitives.StringValue forecast_until_date = 3;
}
message GetSigWXPrognosisForecastJetStreamOutput {
  repeated globals.ui.UiSigWXPrognosisForecastJetStream forecasts = 1;
}

message GetSigWXPrognosisForecastStormInput{
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 1;
  globals.primitives.StringValue forecast_from_date = 2;
  globals.primitives.StringValue forecast_until_date = 3;
}
message GetSigWXPrognosisForecastStormOutput {
  repeated globals.ui.UiSigWXPrognosisForecastStorm forecasts = 1;
}

message GetSigWXPrognosisForecastVolcanoInput{
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 1;
  globals.primitives.StringValue forecast_from_date = 2;
  globals.primitives.StringValue forecast_until_date = 3;
}
message GetSigWXPrognosisForecastVolcanoOutput {
  repeated globals.ui.UiSigWXPrognosisForecastVolcano forecasts = 1;
}

message GetSigWXPrognosisForecastRadiationInput{
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 1;
  globals.primitives.StringValue forecast_from_date = 2;
  globals.primitives.StringValue forecast_until_date = 3;
}
message GetSigWXPrognosisForecastRadiationOutput {
  repeated globals.ui.UiSigWXPrognosisForecastRadiation forecasts = 1;
}

message SaveSurfaceInput{
  globals.misc.DataSourceId data_source_id = 1;
  repeated globals.met.Surface surfaces = 2;
}

message SaveSurfaceOutput{
}

message GetSurfaceInput{
  globals.misc.DataSourceId data_source_id = 1;
  globals.primitives.StringValue from_date = 2;
  globals.primitives.StringValue until_date = 3;
  globals.met.SurfaceLayer layer_type = 4;
}

message GetSurfaceOutput{
  repeated globals.met.Surface surfaces = 1;
}

message GetUpperAirWindTemperaturesInput{
  globals.misc.DataSourceId data_source_id = 1;
  globals.primitives.StringValue from_date = 2;
  globals.primitives.StringValue until_date = 3;
  globals.primitives.Int32Value pressure_level = 4;
  globals.nav.Altitude min_altitude = 5;
  globals.nav.Altitude max_altitude = 6;
  globals.primitives.Int32Value skip = 7;
  globals.primitives.Int32Value take = 8;
}

message GetUpperAirWindTemperaturesOutput{
  repeated globals.met.UpperAirWindTemperatures upper_air_wind_temperatures = 1;
}

message GetPointWeatherUiInput {
  com.fss.grpc.globals.misc.DataSourceId data_source_id = 1;
  globals.primitives.StringValue timestamp_from = 2;
  globals.primitives.StringValue timestamp_until = 3;

  globals.nav.Altitude altitude = 4;
  globals.primitives.DoubleValue pressure_level = 5;

  repeated AirDataTile air_data_tiles = 6;

  message AirDataTile {
    globals.nav.Point left_upper_coordinate = 1;
    globals.nav.Point right_lower_coordinate = 2;
    globals.primitives.Int32Value x_value = 3;
    globals.primitives.Int32Value y_value = 4;
    globals.primitives.Int32Value z_value = 5;
  }

  globals.primitives.Int32Value z_max_value = 7;
  globals.met.AirDataOptions options = 8;
}

message GetPointWeatherUiOutput {
  repeated DataPoint data_points = 1;
  message DataPoint {
    globals.nav.Point position = 1;
    globals.ui.UiWind wind = 2;
    globals.primitives.DoubleValue temperature_celsius = 3;
    globals.primitives.DoubleValue isa_deviation_celsius = 4;
    globals.primitives.DoubleValue icing = 5;
    globals.primitives.DoubleValue shear = 6;
    globals.ui.UiAltitude tropopause = 7;
  }
}

